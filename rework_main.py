# Erstellen von grafischen Objekten zur einfacheren Nutzung und f√ºr mehr √úbersichtlichkeit

spacer_8 = '<*><*><*><*><*><*><*><*>'
spacer_16 = '<*><*><*><*><*><*><*><*><*><*><*><*><*><*><*><*>'
greeting = '<*><*> Willkommen beim Passwortgenerator! <*><*>'

# Erstellung von "Grafiken" als Class zur √úbersichtlichkeit


def loading():
    print(' ‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñá‚ñ¢ \n'
          '   ‚ï≠‚îÅ‚ïÆ‚ï≠‚îÅ‚ïÆ ‚ï≠‚ïÆ„ÄÄ‚ï±  \n'
          '   ‚ï∞‚îÅ‚î´‚ï∞‚îÅ‚î´ ‚ï∞‚ïØ‚ï±‚ï≠‚ïÆ \n'
          '   ‚ï∞‚îÅ‚ïØ‚ï∞‚îÅ‚ïØ ‚ï±  ‚ï∞‚ïØ  COMPLETE \n ')


def bye():
    print('Vielen Dank  f√ºr das Benutzen des PyPW-Generator \n'
          'Programmiert von N3ros\n'
          'Auf Wiedersehen\n'
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£§‚£§‚£§‚£§‚£§‚£∂‚£¶‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n'
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚°ø‚†õ‚†â‚†ô‚†õ‚†õ‚†õ‚†õ‚†ª‚¢ø‚£ø‚£∑‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n'
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚†à‚¢ª‚£ø‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä\n'
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚°è‚†Ä‚†Ä‚†Ä‚£†‚£∂‚£æ‚£ø‚£ø‚£ø‚†ø‚†ø‚†ø‚¢ø‚£ø‚£ø‚£ø‚£Ñ‚†Ä‚†Ä‚†Ä\n'
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Å‚†Ä‚†Ä‚¢∞‚£ø‚£ø‚£Ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚¢ø‚£∑‚°Ñ‚†Ä\n'
          '‚†Ä‚†Ä‚£Ä‚£§‚£¥‚£∂‚£∂‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£Üüî¥‚†Ä‚†Ä‚†Ä‚†Äüî¥‚†Ä‚†Ä‚£ø‚£∑‚†Ä\n'
          '‚†Ä‚¢∞‚£ø‚°ü‚†ã‚†â‚£π‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£§‚£§‚£§‚£∂‚£∂‚£∂‚£∂‚£ø‚£ø‚£ø\n'
          '‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†É‚†Ä\n'
          '‚†Ä‚£∏‚£ø‚°á‚†Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚†ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚†ø‚†õ‚¢ª‚£ø‚°á‚†Ä‚†Ä\n'
          '‚†Ä‚£ø‚£ø‚†Å‚†Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ß‚†Ä‚†Ä\n'
          '‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚†Ä‚†Ä\n'
          '‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚†Ä‚†Ä\n'
          '‚†Ä‚¢ø‚£ø‚°Ü‚†Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä\n'
          '‚†Ä‚†∏‚£ø‚£ß‚°Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†É‚†Ä‚†Ä\n'
          '‚†Ä‚†Ä‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚£ø‚£∑‚£∂‚£∂‚£∂‚£∂‚†∂‚†Ä‚¢†‚£ø‚£ø‚†Ä‚†Ä‚†Ä\n'
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚£Ω‚£ø‚°è‚†Å‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä\n'
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°á‚†Ä‚¢π‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚†á‚†Ä‚†Ä‚†Ä\n'
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£¶‚£Ñ‚£Ä‚£†‚£¥‚£ø‚£ø‚†Å‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ø‚°ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä\n'
          '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†ª‚†ø‚†ø‚†ø‚†ø‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä \n')


def welcome_msg():
    print(spacer_16)
    print(greeting)
    print(spacer_16)


# Start des eigentlichen Programm

welcome_msg()

# While-Schleife, um mehrere Passw√∂rter generieren zu k√∂nnen ohne das Programm neustarten zu m√ºssen

while True:

    # 1. Importieren von ben√∂tigten Modulen

    import random   # Zur zuf√§lligen Auswahl von Symbolen und vermischen von Zahlen, Sonderzeichen und Buchstaben
    import string   # Vorgefertige Strings mit Buchstaben, Zahlen, Sonderzeichen
    import time     # Zeitmodul, um Timer zu nutzen (sleep)
    import pyperclip  # Zum automatischen kopieren in die Zwischenablage

    # 2. Abfrage, wieviele Zahlen, Buchstaben, Sonderzeichen der User haben m√∂chte

    length_num = (input('\n Wieviele Zahlen soll das Passwort enthalten?'))

    if not length_num.isdecimal():
        print('\n' + spacer_8 + "\nBitte eine Zahl eingeben.\n" + spacer_8 + '\n')

    else:
        length_num = int(length_num)

        length_let = (input('\n Wieviele Buchstaben soll das Passwort enthalten?'))

        if not length_let.isdecimal():
            print('\n' + spacer_8 + "\nBitte eine Zahl eingeben.\n" + spacer_8 + '\n')

        else:
            length_let = int(length_let)

            length_sym = (input('\n Wieviele Symbole soll das Passwort enthalten?'))

            if not length_sym.isdecimal():
                print('\n' + spacer_8 + "\nBitte eine Zahl eingeben.\n" + spacer_8 + '\n')

            else:
                length_sym = int(length_sym)

        # 3. Gesamtl√§nge des Passworts errechnen und als integer deklarieren

            length_pw = int(length_let + length_num + length_sym)

            # 4. Definition der Zeichens√§tze f√ºr die obigen Abfragen

            letters = string.ascii_letters
            num = string.digits
            sym = string.punctuation

            # 5. Zuf√§llige Auswahl an gew√ºnschter Anzahl der Zeichen aus Abfrage
            # temp-objekte als Zwischenspeicherobjekt

            temp_num = random.sample(num, length_num)
            temp_let = random.sample(letters, length_let)
            temp_sym = random.sample(sym, length_sym)

            # 6. Zusammenf√ºhren der Zeichen in ein Objekt, um diese im n√§chsten Schritt
            # in zuf√§llige Reihenfolge zu bringen

            temp = temp_num + temp_let + temp_sym

            # 7. Generierung des Passworts mit zuf√§lliger Reihenfolge der Zeichen aus der Zusammenf√ºhrung
            # sodass Zahlen, Buchstaben und Sonderzeichen gemischt sind.

            password = ''.join(random.sample(temp, length_pw))

            # 8. Simulation des Arbeitsprozesses der Erstellung

            print('  generating new Password \n ')
            loading()
            time.sleep(1)         # Timer um "Arbeit" zu simulieren

            # 9. Ausgabe des generierten Passworts

            print('Ihr generiertes Passwort lautet \n')
            print(spacer_8 + '\n\n' + password + '\n \n' + spacer_8)

        # 10. Abfrage ob PW in die Zwischenablage kopiert werden soll

        pw_copy = input('\n M√∂chten Sie das Passwort in die Zwischenablage kopieren? Y/N \n')

        # Wenn ja, kopieren des PW in die Zwischenablage von Windows

        if pw_copy == 'Y' or pw_copy == 'y':
            pyperclip.copy(password)
            print('In Zwischenablage kopiert')

        # Else-Anweisung entf√§llt, da noch eine Abfrage folgt und nichts anderes unternommen werden soll,
        # wenn nicht kopiert wird

        # 11. Abfrage, ob User noch ein Passwort generieren m√∂chte

        new_try = input('M√∂chten Sie noch ein Passwort generieren? Y/N \n')

        # Wenn ja, Sprung zur√ºck zum Anfang der While-Schleife

        if new_try == 'Y' or new_try == 'y':
            print('restructuring the time-space-coefficient\n')
            loading()
            continue

        # Wenn nein, Verabschiedung und Beendigung des Programms

        else:
            bye()
            print('Das Programm schlie√üt sich in 4 Sekunden von alleine')
            time.sleep(4)
            break
